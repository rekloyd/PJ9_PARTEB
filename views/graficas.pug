html
  head
    title Gráficos con Vue + Canvas
    script(src="https://unpkg.com/vue@3")
    style.
      .grafico-container {
        margin-top: 20px;
      }
      #mapaTooltip {
        z-index: 1000;
        pointer-events: none;
      }

  body
    div#app
      button(@click="mostrarGrafico('graficoBarras')") Gráfico de Barras
      button(@click="mostrarGrafico('graficoProgresion')") Gráfico de Progresión
      button(@click="mostrarGrafico('graficoPastel')") Gráfico de Pastel
      button(@click="mostrarGrafico('mapa')") Mapa

      div#graficoBarras.grafico-container(style="display: none;")
        canvas#canvasBarras(width="500", height="400")

      div#graficoProgresion.grafico-container(style="display: none;")
        canvas#canvasProgresion(width="500", height="400")

      div#graficoPastel.grafico-container(style="display: none;")
        canvas#canvasPastel(width="500", height="400")

      div#mapa.grafico-container(style="display: none;")
        canvas#canvas(width="1000", height="600")

      div#mapaTooltip(v-if="isTooltipVisible", :style="tooltipStyle")
        div(v-html="tooltipContent")

    script.
      const { createApp } = Vue;

      createApp({
        data() {
          return {
            isTooltipVisible: false,
            tooltipContent: '',
            tooltipStyle: {
              position: 'absolute',
              background: 'white',
              padding: '10px',
              border: '1px solid #ccc',
              display: 'none',
            },
          };
        },
        mounted() {
          this.iniciarGraficos();
        },
        methods: {
          mostrarGrafico(id) {
            const contenedores = document.querySelectorAll('.grafico-container');
            contenedores.forEach((contenedor) => {
              contenedor.style.display = contenedor.id === id ? 'block' : 'none';
            });

            if (id === 'graficoBarras') this.generarGraficoBarras();
            if (id === 'graficoProgresion') this.generarGraficoProgresion();
            if (id === 'graficoPastel') this.generarGraficoPastel();
            if (id === 'mapa') this.mostrarMapa();
          },

          iniciarGraficos() {
            this.generarGraficoBarras();
            this.generarGraficoProgresion();
            this.generarGraficoPastel();
          },

          generarGraficoBarras() {
            const canvasBarras = document.getElementById('canvasBarras');
            const ctx = canvasBarras.getContext('2d');
            ctx.clearRect(0, 0, canvasBarras.width, canvasBarras.height);

            const datos = [50, 200, 300, 500, 700, 1200, 3000, 7000];
            const etiquetas = ['2000 a.C', '100 a.C', '711', '1492', '1789', '1850', '1960', '2010'];
            const colores = Array(etiquetas.length).fill('#3357FF');

            const anchoBarra = 40;
            const espacioEntreBarras = 2.5;
            const ejeX = 50;
            const ejeY = canvasBarras.height - 50;
            const maxValor = Math.max(...datos);
            const escala = (canvasBarras.height - 100) / maxValor;

            datos.forEach((valor, index) => {
              const altura = valor * escala;
              const x = ejeX + (anchoBarra + espacioEntreBarras) * index;
              const y = ejeY - altura;

              ctx.fillStyle = colores[index];
              ctx.fillRect(x, y, anchoBarra, altura);
              ctx.fillStyle = '#000';
              ctx.textAlign = 'center';
              ctx.fillText(etiquetas[index], x + anchoBarra / 2, ejeY + 20);
              ctx.fillText(`${valor}M`, x + anchoBarra / 2, y - 10);
            });

            ctx.beginPath();
            ctx.moveTo(ejeX - 10, ejeY);
            ctx.lineTo(canvasBarras.width - 10, ejeY);
            ctx.moveTo(ejeX, 0);
            ctx.lineTo(ejeX, ejeY + 10);
            ctx.stroke();
          },

          generarGraficoProgresion() {
            const canvas = document.getElementById('canvasProgresion');
            const ctx = canvas.getContext('2d');
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            const data = [
              { year: 2024, population: 8000 },
              { year: 2030, population: 8500 },
              { year: 2050, population: 9500 },
              { year: 2080, population: 10400 }
            ];

            const xStart = 50;
            const yStart = 250;
            const xGap = 100;
            const yScale = 0.081;

            ctx.beginPath();
            ctx.moveTo(xStart, yStart);
            ctx.lineTo(xStart + 4 * xGap, yStart);
            ctx.moveTo(xStart, yStart);
            ctx.lineTo(xStart, 50);
            ctx.strokeStyle = "#000000";
            ctx.lineWidth = 2;
            ctx.stroke();

            ctx.font = "14px Arial";
            ctx.fillStyle = "#000000";
            data.forEach((point, index) => {
              ctx.fillText(point.year, xStart + index * xGap - 15, yStart + 20);
            });

            const yLabels = [8000, 8500, 9000, 9500, 10000, 10400];
            yLabels.forEach((label) => {
              const yPos = yStart - (label - 8000) * yScale;
              ctx.fillText(label, xStart - 40, yPos + 5);
            });

            ctx.beginPath();
            ctx.moveTo(xStart, yStart - (data[0].population - 8000) * yScale);
            data.forEach((point, index) => {
              const xPos = xStart + index * xGap;
              const yPos = yStart - (point.population - 8000) * yScale;
              ctx.lineTo(xPos, yPos);
            });

            ctx.strokeStyle = "#FF5733";
            ctx.lineWidth = 3;
            ctx.stroke();

            ctx.fillStyle = "#FF5733";
            data.forEach((point, index) => {
              const xPos = xStart + index * xGap;
              const yPos = yStart - (point.population - 8000) * yScale;
              ctx.beginPath();
              ctx.arc(xPos, yPos, 5, 0, 2 * Math.PI);
              ctx.fill();
            });
          },

          generarGraficoPastel() {
            const canvas = document.getElementById("canvasPastel");
            const ctx = canvas.getContext("2d");
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            const centroX = canvas.width / 2;
            const centroY = canvas.height / 2;
            const radio = 150;

            const datos = [
              { pais: "India", porcentaje: 18.29 },
              { pais: "China", porcentaje: 17.87 },
              { pais: "EEUU", porcentaje: 4.27 },
              { pais: "Indonesia", porcentaje: 3.57 },
              { pais: "Pakistán", porcentaje: 2.99 },
              { pais: "Nigeria", porcentaje: 2.89 },
              { pais: "Brasil", porcentaje: 2.7 },
              { pais: "Bangladesh", porcentaje: 2.19 },
              { pais: "Rusia", porcentaje: 1.85 },
              { pais: "México", porcentaje: 1.68 },
            ];

            const colores = [
              "#FF5733", "#33FF57", "#5733FF", "#FFC300", "#33FFF0",
              "#FF33E0", "#8E44AD", "#3498DB", "#F1C40F", "#E67E22"
            ];

            const total = datos.reduce((sum, d) => sum + d.porcentaje, 0);
            let anguloInicio = 0;

            datos.forEach((dato, index) => {
              const angulo = (dato.porcentaje / total) * 2 * Math.PI;
              ctx.beginPath();
              ctx.moveTo(centroX, centroY);
              ctx.arc(centroX, centroY, radio, anguloInicio, anguloInicio + angulo);
              ctx.closePath();
              ctx.fillStyle = colores[index];
              ctx.fill();

              anguloInicio += angulo;
            });
          },

          mostrarMapa() {
            const canvas = document.getElementById("canvas");
            const ctx = canvas.getContext("2d");
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            ctx.fillStyle = "#e0e0e0";
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            ctx.fillStyle = "#333";
            ctx.font = "20px Arial";
            ctx.fillText("Aquí se mostraría un mapa o algo representativo", 300, 300);
          }
        }
      }).mount("#app");
